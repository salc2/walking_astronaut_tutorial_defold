
local factor_touch_hor = 25
local factor_touch_ver = 45

function init(self)
	msg.post(".", "acquire_input_focus")
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	self.animate_bullet = true 
	self.click = function(node_name)

		local n = gui.get_node(node_name)


		if self.animate_bullet then 
			gui.animate(n, "scale", vmath.vector4(0.7,0.7,0,1), gui.EASING_INOUTBOUNCE, 0.3, 0,  nil, gui.PLAYBACK_LOOP_FORWARD )
		end 
		self.animate_bullet = false

		
		if node_name == "action" then
			msg.post("/gun", "to_input", {action_id = "fire"})
		end
	end
	self.init_vec3 = nil
	self.current_vec3 = nil
	self.left_side = tonumber(sys.get_config("display.width"))/2
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function map(x, a1, a2, b1, b2)
	return (x - a1) / (a2 - a1) * (b2 - b1) + b1
end

function clamp(val, lower, upper)
	if lower > upper then lower, upper = upper, lower end
	return math.max(lower, math.min(upper, val))
end


function to_discrete(x,ref, no, yes)
end


function pain_blue(node_name)
	local n = gui.get_node(node_name)
	gui.animate(n, "color", vmath.vector4(0,0,1,1), gui.EASING_LINEAR, 0.2)
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not neede
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end


function on_input(self, action_id, action)
	if action_id == hash("touch") and #action.touch >= 1 and #action.touch < 3 then
		-- If there's 2-3 touch point we'll spawn
		-- magic spark particles at each point.
		for i, tpoint in ipairs(action.touch) do
			if tpoint.x > self.left_side  then
				if not tpoint.released then
				--	self.init_vec3 = vmath.vector3(tpoint.x, 0, 0)
					local act = gui.get_node("action")
					gui.animate(act, "color.w", 0.5, gui.EASING_LINEAR, 0.2)
					self.click("action")
				end
				if tpoint.released then
					--	self.current_vec3 = self.init_vec3
					gui.cancel_animation(gui.get_node("action"),"scale")
					gui.reset_nodes()
					self.animate_bullet = true
				end
				
			end
		end
	end
end	

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
