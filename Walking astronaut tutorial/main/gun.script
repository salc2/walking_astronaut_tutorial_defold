go.property("fire_rate", 0.5)
function init(self)
	msg.post(".", "acquire_input_focus")
	self.loaded = true
	self.last_fired = 0.0
end



function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	if self.last_fired >= self.fire_rate then
		self.loaded = true
		self.last_fired = 0
	end
	self.last_fired = self.last_fired + dt
end

function on_message(self, message_id, message, sender)

	if message_id == hash("my_dir") then

		local v = vmath.vector3()
		if message.dir == hash("right") then
			v.x = 1 
		elseif message.dir == hash("left") then
			v.x = -1 
		elseif message.dir == hash("front") or message.dir == hash("idle") then
			v.y = -1 
		elseif message.dir == hash("back") then
			v.y = 1 
		end 
		self.dir = v
	end 
	if message_id == hash("to_input") then
		fire_gun(self)
	end
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action_id == hash("fire") then 
		fire_gun(self)
		--pprint(go.get_world_position(id))
	end 
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end
function fire_gun(self)
	if  self.loaded then 
		local component = "#factory"
		local p = go.get_position("/astronaut")
		factory.create(component, p, nil, {dir = self.dir}, 1)
		self.loaded = false
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
